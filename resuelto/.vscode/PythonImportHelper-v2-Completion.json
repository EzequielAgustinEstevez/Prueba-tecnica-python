[
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "urllib.request",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "urllib.request",
        "description": "urllib.request",
        "detail": "urllib.request",
        "documentation": {}
    },
    {
        "label": "zipfile",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "zipfile",
        "description": "zipfile",
        "detail": "zipfile",
        "documentation": {}
    },
    {
        "label": "urllib.request,io",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "urllib.request.io",
        "description": "urllib.request.io",
        "detail": "urllib.request.io",
        "documentation": {}
    },
    {
        "label": "requests,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests.",
        "description": "requests.",
        "detail": "requests.",
        "documentation": {}
    },
    {
        "label": "csv_to_json",
        "kind": 2,
        "importPath": "cvsToJson",
        "description": "cvsToJson",
        "peekOfCode": "def csv_to_json(csvFilePath, jsonFilePath):\n    # Open csv file\n    with open(csvFilePath, encoding='utf-8') as csvf:\n        # read csv file data using the csv library's dictionary delimiter by \",\"\n        csvReader = csv.reader(csvf, delimiter=',')\n        # Ignore first line\n        next(csvReader)\n        outPutData = []\n        for row in csvReader:\n            data = {}",
        "detail": "cvsToJson",
        "documentation": {}
    },
    {
        "label": "url",
        "kind": 5,
        "importPath": "cvsToJson",
        "description": "cvsToJson",
        "peekOfCode": "url = 'https://www.jodidata.org/_resources/files/downloads/gas-data/jodi_gas_csv_beta.zip'\nfilehandle, _ = urllib.request.urlretrieve(url)\nzip_file_object = zipfile.ZipFile(filehandle, 'r')\nfirst_file = zip_file_object.namelist()[0]\nfile = zip_file_object.open(first_file)\ncsvFilePath = file\ndef csv_to_json(csvFilePath, jsonFilePath):\n    # Open csv file\n    with open(csvFilePath, encoding='utf-8') as csvf:\n        # read csv file data using the csv library's dictionary delimiter by \",\"",
        "detail": "cvsToJson",
        "documentation": {}
    },
    {
        "label": "zip_file_object",
        "kind": 5,
        "importPath": "cvsToJson",
        "description": "cvsToJson",
        "peekOfCode": "zip_file_object = zipfile.ZipFile(filehandle, 'r')\nfirst_file = zip_file_object.namelist()[0]\nfile = zip_file_object.open(first_file)\ncsvFilePath = file\ndef csv_to_json(csvFilePath, jsonFilePath):\n    # Open csv file\n    with open(csvFilePath, encoding='utf-8') as csvf:\n        # read csv file data using the csv library's dictionary delimiter by \",\"\n        csvReader = csv.reader(csvf, delimiter=',')\n        # Ignore first line",
        "detail": "cvsToJson",
        "documentation": {}
    },
    {
        "label": "first_file",
        "kind": 5,
        "importPath": "cvsToJson",
        "description": "cvsToJson",
        "peekOfCode": "first_file = zip_file_object.namelist()[0]\nfile = zip_file_object.open(first_file)\ncsvFilePath = file\ndef csv_to_json(csvFilePath, jsonFilePath):\n    # Open csv file\n    with open(csvFilePath, encoding='utf-8') as csvf:\n        # read csv file data using the csv library's dictionary delimiter by \",\"\n        csvReader = csv.reader(csvf, delimiter=',')\n        # Ignore first line\n        next(csvReader)",
        "detail": "cvsToJson",
        "documentation": {}
    },
    {
        "label": "file",
        "kind": 5,
        "importPath": "cvsToJson",
        "description": "cvsToJson",
        "peekOfCode": "file = zip_file_object.open(first_file)\ncsvFilePath = file\ndef csv_to_json(csvFilePath, jsonFilePath):\n    # Open csv file\n    with open(csvFilePath, encoding='utf-8') as csvf:\n        # read csv file data using the csv library's dictionary delimiter by \",\"\n        csvReader = csv.reader(csvf, delimiter=',')\n        # Ignore first line\n        next(csvReader)\n        outPutData = []",
        "detail": "cvsToJson",
        "documentation": {}
    },
    {
        "label": "csvFilePath",
        "kind": 5,
        "importPath": "cvsToJson",
        "description": "cvsToJson",
        "peekOfCode": "csvFilePath = file\ndef csv_to_json(csvFilePath, jsonFilePath):\n    # Open csv file\n    with open(csvFilePath, encoding='utf-8') as csvf:\n        # read csv file data using the csv library's dictionary delimiter by \",\"\n        csvReader = csv.reader(csvf, delimiter=',')\n        # Ignore first line\n        next(csvReader)\n        outPutData = []\n        for row in csvReader:",
        "detail": "cvsToJson",
        "documentation": {}
    },
    {
        "label": "#csvFilePath",
        "kind": 5,
        "importPath": "cvsToJson",
        "description": "cvsToJson",
        "peekOfCode": "#csvFilePath = r'jodi_gas_beta.csv'\njsonFilePath = r'data.json'\ncsv_to_json(csvFilePath, jsonFilePath)",
        "detail": "cvsToJson",
        "documentation": {}
    },
    {
        "label": "jsonFilePath",
        "kind": 5,
        "importPath": "cvsToJson",
        "description": "cvsToJson",
        "peekOfCode": "jsonFilePath = r'data.json'\ncsv_to_json(csvFilePath, jsonFilePath)",
        "detail": "cvsToJson",
        "documentation": {}
    },
    {
        "label": "url",
        "kind": 5,
        "importPath": "descarga",
        "description": "descarga",
        "peekOfCode": "url = 'https://www.jodidata.org/_resources/files/downloads/gas-data/jodi_gas_csv_beta.zip'\nfilehandle, _ = urllib.request.urlretrieve(url)\nzip_file_object = zipfile.ZipFile(filehandle, 'r')\nfirst_file = zip_file_object.namelist()[0]\nfile = zip_file_object.open(first_file)\ncontent = file.read()",
        "detail": "descarga",
        "documentation": {}
    },
    {
        "label": "zip_file_object",
        "kind": 5,
        "importPath": "descarga",
        "description": "descarga",
        "peekOfCode": "zip_file_object = zipfile.ZipFile(filehandle, 'r')\nfirst_file = zip_file_object.namelist()[0]\nfile = zip_file_object.open(first_file)\ncontent = file.read()",
        "detail": "descarga",
        "documentation": {}
    },
    {
        "label": "first_file",
        "kind": 5,
        "importPath": "descarga",
        "description": "descarga",
        "peekOfCode": "first_file = zip_file_object.namelist()[0]\nfile = zip_file_object.open(first_file)\ncontent = file.read()",
        "detail": "descarga",
        "documentation": {}
    },
    {
        "label": "file",
        "kind": 5,
        "importPath": "descarga",
        "description": "descarga",
        "peekOfCode": "file = zip_file_object.open(first_file)\ncontent = file.read()",
        "detail": "descarga",
        "documentation": {}
    },
    {
        "label": "content",
        "kind": 5,
        "importPath": "descarga",
        "description": "descarga",
        "peekOfCode": "content = file.read()",
        "detail": "descarga",
        "documentation": {}
    },
    {
        "label": "download_url",
        "kind": 2,
        "importPath": "descarga2",
        "description": "descarga2",
        "peekOfCode": "def download_url(url, save_path, chunk_size=128):\n    r = urllib.request.get(url, stream=True)\n    with open(save_path, 'wb') as fd:\n        for chunk in r.iter_content(chunk_size=chunk_size):\n            fd.write(chunk)",
        "detail": "descarga2",
        "documentation": {}
    },
    {
        "label": "r",
        "kind": 5,
        "importPath": "descarga3",
        "description": "descarga3",
        "peekOfCode": "r = requests.request.get('https://www.jodidata.org/_resources/files/downloads/gas-data/jodi_gas_csv_beta.zip')\nz = zipfile.ZipFile(io.BytesIO(r.content))\nz.extractall(\".\")",
        "detail": "descarga3",
        "documentation": {}
    },
    {
        "label": "z",
        "kind": 5,
        "importPath": "descarga3",
        "description": "descarga3",
        "peekOfCode": "z = zipfile.ZipFile(io.BytesIO(r.content))\nz.extractall(\".\")",
        "detail": "descarga3",
        "documentation": {}
    }
]